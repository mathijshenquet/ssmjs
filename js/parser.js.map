{
  "version": 3,
  "file": "parser.js",
  "sourceRoot": "..\\",
  "sources": [
    "src\\parser.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\r\nif not global?\r\n  global = window\r\n\r\ntoken = (regex, fn) ->\r\n  return (src) ->\r\n    if !(res = regex.exec(src))\r\n      return false;\r\n    src = src.slice(res[0].length)\r\n    [src, fn(res)]\r\n\r\nmatchLabel = token /^([a-zA-Z_\\-]+):/, (match) -> match[1]\r\nmatchOpcode = token /^[a-zA-Z]+/, (match) -> match[0]\r\nargMatchers = [\r\n  token /^0x[0-9a-fA-F]+/, (match) -> parseInt(match[0])\r\n  token /^0b([01]+)/, (match) -> parseInt(match[1], 2)\r\n  token /^-?[0-9]+(\\.[0-9]+)?/, (match) -> +match[0]\r\n  token /^[a-zA-Z][a-zA-Z_\\-0-9]*/, (match) -> match[0]\r\n  token /^\\\"(.*)\\\"/, (match) -> match[1]\r\n  token /^\\'.\\'/, (match) -> match[0][1].charCodeAt(0)\r\n  token /^\\'..\\'/, (match) -> (match[0][1].charCodeAt(0) << 16) + match[0][2].charCodeAt(0)\r\n]\r\n\r\nmatchArg = (src) ->\r\n  for matcher in argMatchers\r\n    if (res = matcher(src))\r\n      return res\r\n  false\r\n\r\n\r\nglobal.Parser = parse: (src) ->\r\n  lines = [];\r\n  lineNr = 0;\r\n\r\n  line = {}\r\n\r\n  prevlength = 0\r\n  while src.length != prevlength\r\n    prevlength = src.length\r\n\r\n    if (res = matchLabel(src))\r\n      src = res[0]\r\n      line.label = res[1]\r\n      line.opcode = \"nop\"\r\n\r\n    if match = src.match(/^[ \\t]+/)\r\n      src = src.slice(match[0].length)\r\n\r\n    if (res = matchOpcode(src))\r\n      src = res[0]\r\n      line.opcode = res[1]\r\n      line.args = []\r\n\r\n      while src[0] != \"\\n\"\r\n        unless match = src.match(/^[ \\t]+/)\r\n          break\r\n\r\n        src = src.slice(match[0].length)\r\n\r\n        unless (res = matchArg(src))\r\n          break\r\n\r\n        src = res[0]\r\n        line.args.push res[1]\r\n\r\n    if src[0] == \";\"\r\n      src = src.slice(1)\r\n\r\n      if match = src.match(/^[ \\t]+/)\r\n        src = src.slice(match[0].length)\r\n\r\n      if match = src.match(/^@([\\w]*)/)\r\n        src = src.slice(match[0].length)\r\n        line.hint = {label: match[1]}\r\n\r\n      src = src.slice(src.indexOf(\"\\n\"))\r\n\r\n    if line.opcode?\r\n      line.hint ?= {}\r\n      line.lineNr = lineNr\r\n      lines.push line\r\n      line = {}\r\n\r\n    if src[0] == \"\\n\"\r\n      lineNr++\r\n      src = src.slice(1)\r\n    else if src[0] != undefined\r\n      throw new Error(\"Unexpected input #{src}\")\r\n\r\n  return lines\r\n"
  ]
}