{
  "version": 3,
  "file": "view.js",
  "sourceRoot": "..\\",
  "sources": [
    "src\\view.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\r\nif not global?\r\n  global = window\r\n\r\n$(\"#src\").keyup (e) ->\r\n  setTimeout View.sourceChanged, 50\r\n\r\n$(document).delegate '#src', 'keydown', (e) ->\r\n  keyCode = e.keyCode || e.which;\r\n\r\n  if keyCode == 9\r\n    e.preventDefault()\r\n\r\n    if window.getSelection\r\n      sel = window.getSelection()\r\n\r\n      if sel.getRangeAt && sel.rangeCount\r\n        range = sel.getRangeAt(0)\r\n        range.deleteContents()\r\n        node = document.createTextNode(\"\\t\")\r\n        range.insertNode(node)\r\n        sel.collapse(node, 1)\r\n\r\n    else if document.selection && document.selection.createRange\r\n      range = document.selection.createRange()\r\n      range.pasteHTML(\"\\t\")\r\n      range.move(\"character\", 1)\r\n      range.select()\r\n\r\n\r\nString::padl = (str, len) ->\r\n  padding = Array(((len/str.length)|0) + 1).join(str)\r\n  padding.substring(0, padding.length - this.length) + this\r\n\r\nString::divide = (len) ->\r\n  pieces = Math.ceil(@length / len)\r\n  out = []\r\n\r\n  i = 0\r\n  while i < pieces\r\n    out.push @slice(i*len, (i+1)*len)\r\n    i++\r\n\r\n  out\r\n\r\nNumber::showHex = ->\r\n\r\nNumber::showBinary = -> (if this.valueOf() == 0 then \"\" else @toString(2)).padl(\"-\", 32).divide(4).join(\" \")\r\n\r\nglobal.View =\r\n  addButton: (name, fn) ->\r\n    $btn = $(\"<button class=ctrl_btn id=btn_#{name}><img src='./static/img/#{name}.png' /></button>\")\r\n    $(\"#ctrl\").append($btn)\r\n    $btn.click fn\r\n\r\n  showPC: (nr) ->\r\n    $pc = $(\"#pc\")\r\n\r\n    if nr == false\r\n      $pc.hide()\r\n    else\r\n      $pc.animate(top: \"#{(nr*20)+8}px\", 200).show()\r\n\r\n  getSrc: -> $(\"#src\")[0].textContent\r\n\r\n  print: (thing) ->\r\n    console.log(thing)\r\n    $out = $(\"#console-out\");\r\n    $out.append(thing).append(\"<hr />\");\r\n\r\n    $out[0].scrollTop = $out[0].scrollHeight\r\n\r\n  update: (cpu) ->\r\n    @showPC(cpu.lineNr)\r\n    @showMem(cpu, [\"hex\", \"int\", \"annotation\", \"binary\"])\r\n    @showRegs(cpu, [\"hex\", \"int\", \"annotation\", \"binary\"])\r\n\r\n  showChar: (cp) ->\r\n    if cp < 32\r\n      switch cp\r\n        when 0 then undefined\r\n        when 10 then \"\\\\n\"\r\n        when 13 then \"\\\\r\"\r\n        when 9  then \"\\\\t\"\r\n        else \"\\\\#{cp}\"\r\n    else\r\n      String.fromCharCode(cp)\r\n\r\n  memoryViews:\r\n    hex: (bank, addr) -> nr = bank.raw[addr]; (if nr == 0 then \"\" else nr.toString(16)).padl(\"-\", 8).divide(2).join(\" \")\r\n    binary: (bank, addr) -> nr = bank.raw[addr]; (if nr == 0 then \"\" else nr.toString(2)).padl(\"-\", 32).divide(4).join(\" \")\r\n    int: (bank, addr) -> bank.int[addr]\r\n    float: (bank, addr) -> bank.float[addr]\r\n    label: (bank, addr) -> bank.label[addr] ? \"\"\r\n    annotation: (bank, addr) -> \"<span style=color:#{bank.annote[addr]?.color ? \"inherit\"};>#{bank.annote[addr]?.text ? bank.label[addr] ? \"\"}</span>\"\r\n    char: (bank, addr) -> \"#{@showChar(bank.u16[addr*2 + 1]) ? \"\"}#{@showChar(bank.u16[addr*2]) ? \"\\\\0\"}\"\r\n\r\n  memoryBankRow: (bank, addr, rows, reg_name) ->\r\n    console.log reg_name\r\n\r\n    $row = (if reg_name? then $(\"<tr id='reg_#{reg_name.toLowerCase()}' />\") else $(\"<tr />\"))\r\n\r\n    for row in rows\r\n      rowspan = 1\r\n      if row == \"annotation\"\r\n        if bank.annote[addr]?.ignore\r\n          continue\r\n\r\n        annotation = bank.annote[addr]?.text\r\n\r\n        if annotation?\r\n          while bank.annote[addr+(rowspan)]?.text == annotation\r\n            bank.annote[addr+(rowspan)].ignore = true\r\n            rowspan++\r\n\r\n      $row.append $(\"<td rowspan=#{rowspan} class='mem_#{row} #{if rowspan != 1 then \"mem_rowspan\" else \"\"}'>#{@memoryViews[row](bank, addr)}</td>\")\r\n\r\n    return $row\r\n\r\n  showMem: (cpu, rows) ->\r\n    $tbody = $(\"#mem .tbody tbody\")\r\n    $tbody.empty()\r\n\r\n    sp = cpu.regVal(\"sp\")\r\n    mp = cpu.regVal(\"mp\")\r\n\r\n    $thead = $(\"#mem .thead thead tr\")\r\n    $thead.empty()\r\n\r\n\r\n    $thead.append $(\"<th class='mem_addr'>address</th>\")\r\n    $thead.append $(\"<th class='mem_mp_offset'></th>\")\r\n    for row in rows\r\n      $thead.append $(\"<th class='mem_#{row}'>#{row}</th>\")\r\n\r\n    addr = 0\r\n    while addr <= cpu.memSeen\r\n      $row = @memoryBankRow(cpu.mem, addr, rows)\r\n\r\n      offset =  if mp != -1 && -8 < (addr - mp) < 8\r\n                  if addr == mp\r\n                    \"mp\"\r\n                  else if addr < mp\r\n                    addr - mp\r\n                  else\r\n                    \"+#{addr-mp}\"\r\n                else\r\n                  \"\"\r\n\r\n      $row.prepend $(\"<td class='mem_mp_offset'>#{offset}</td>\")\r\n\r\n      $row.prepend $(\"<td class='mem_addr'>0x#{addr.toString(16).padl('0', 8)}</td>\")\r\n\r\n      $tbody.append($row)\r\n\r\n      if addr == mp\r\n        $row.addClass(\"mp\")\r\n\r\n      if addr > sp\r\n        $row.addClass(\"zombie_mem\")\r\n\r\n\r\n      if cpu.mem.written[addr]\r\n        $row.addClass(\"ping-write\")\r\n      else if cpu.mem.read[addr]\r\n        $row.addClass(\"ping-read\")\r\n\r\n      addr++\r\n\r\n    cpu.mem.written = {}\r\n    cpu.mem.read = {}\r\n\r\n  showRegs: (cpu, rows) ->\r\n    $tbody = $(\"#regs .tbody tbody\")\r\n    $tbody.empty()\r\n\r\n    $thead = $(\"#regs .thead thead tr\")\r\n    $thead.empty()\r\n\r\n    $thead.append $(\"<th class='mem_addr'>address</th>\")\r\n    for row in rows\r\n      $thead.append $(\"<th class='mem_#{row}'>#{row}</th>\")\r\n\r\n\r\n    id = 0\r\n    while id < cpu.regCount\r\n      reg_name = cpu.regName(id)\r\n\r\n      $row = @memoryBankRow(cpu.reg, id, rows, reg_name)\r\n      $row.prepend $(\"<td class='mem_addr'>#{reg_name ? \"R#{id}\"}</td>\")\r\n\r\n      $tbody.append($row)\r\n\r\n      if cpu.reg.written[id]\r\n        $row.addClass(\"ping-write\")\r\n      else if cpu.reg.read[id]\r\n        $row.addClass(\"ping-read\")\r\n\r\n      id++\r\n\r\n    cpu.reg.written = {}\r\n    cpu.reg.read = {}\r\n\r\n\r\n  sourceChanged: ->\r\n"
  ]
}